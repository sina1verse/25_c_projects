#include <stdio.h>
#include <stdbool.h>
#include <time.h>

int check_snake_ladder(int playerPoint);


int main()
{
    int pointP1, pointP2, diceNum, placeCheck;
    int snakeHouse[10][1], ladderHouse[7][1];
    bool gameOn=1;
    bool turn;
    char diceRoll = 'r';
    char entry, diceCheck;

    srand(time(NULL));




    printf("\n\n\t\t Welcome to Snakes and ladder\n\n");
    printf("The person with the higher number starts. Roll the dice.\n");

    printf("\nTo roll the dice press r");
    do{
    entry=getch();
    diceCheck = (entry == 'r');
    }while(!diceCheck);

    pointP1 = rand()%6+1;
    printf("\n\n::Player 1:  %d :: \n\n", pointP1);

    printf("\nTo roll the dice press r");
    do{
    entry=getch();
    diceCheck = (entry == 'r');
    }while(!diceCheck);

    pointP2 = rand()%6+1;
    printf("\n\n::Player 2:  %d :: \n\n", pointP2);

    turn = (pointP2 > pointP1);

    do
    {
        switch (turn)
        {
            case 0:
            {
                printf("\nPlayer 1, to roll the dice press r");
                do{
                entry=getch();
                diceCheck = (entry == 'r');
                }while(!diceCheck);
                system("cls");

                diceNum = rand()%6+1;
                printf("\n\n::Dice:  %d :: \n\n", diceNum);
                pointP1 += diceNum;

                printf("\n\n::Player 1 place: %d :: \n\n", pointP1);
                placeCheck = check_snake_ladder(pointP1);
                if (placeCheck>pointP1){pointP1= placeCheck; printf("\n::You climbed the ladder :D . Your new place: %d", pointP1);}
                if (placeCheck<pointP1){pointP1= placeCheck; printf("\n::You've got bitten by a snake D: . Your new place: %d", pointP1);}
                break;
            }

            case 1:
            {
                printf("\nPlayer 2, to roll the dice press r");
                do{
                entry=getch();
                diceCheck = (entry == 'r');
                }while(!diceCheck);
                system("cls");

                diceNum = rand()%6+1;
                printf("\n\n::Dice:  %d :: \n\n", diceNum);
                pointP2 += diceNum;

                printf("\n\n::Player 2 place: %d :: \n\n", pointP2);
                placeCheck = check_snake_ladder(pointP2);
                if (placeCheck>pointP2){pointP2= placeCheck; printf("\n::You climbed the ladder :D . Your new place: %d", pointP2);}
                if (placeCheck<pointP2){pointP2= placeCheck; printf("\n::You've got bitten by a snake D: . Your new place: %d", pointP2);}
                break;
            }
        }


        turn = !turn;
        if (pointP1 >= 100){printf("\n\n$$     Player 1 WINS!!!     $$");gameOn=0;}
        if (pointP2 >= 100){printf("\n\n$$     Player 2 WINS!!!     $$");gameOn=0;}
    }
    while(gameOn);

    printf("\n\n:: ...END... :: \n\n");

    return (0);
}

int check_snake_ladder(int playerPoint)
{
    int i, j;
    int snakeHouse[2][10] = { {4, 17, 20, 37, 46, 48, 59, 70, 71, 80}, {-2, -5, -5, -6, -3, -7, -5, -3, -13, -6} };
    int ladderHouse[2][7] = { {5, 7, 11, 15, 35, 42, 67}, {6, 17, 10, 16, 8, 3, 9} };

    for(i=0;i<10;i++)
    {
        if(playerPoint==snakeHouse[0][i]){playerPoint+=snakeHouse[1][i];}
    }

    for(i=0;i<7;i++)
    {
        if(playerPoint==ladderHouse[0][i]){playerPoint+=ladderHouse[1][i];}
    }

    return (playerPoint);
}
